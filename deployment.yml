name: Doomscroll CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./final_backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
      
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./final_frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Build and push python
        uses: docker/build-push-action@v4
        with:
          context: ./python
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python:latest
      
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.DO_KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Process app-secrets
        working-directory: ./kuber
        run: |
          sed -i "s|\${MY_SQL_URL}|${{ secrets.MY_SQL_URL }}|g" app-secrets.yml
          sed -i "s|\${MY_SQL_USER}|${{ secrets.MY_SQL_USER }}|g" app-secrets.yml
          sed -i "s|\${MY_SQL_PASSWORD}|${{ secrets.MY_SQL_PASSWORD }}|g" app-secrets.yml
          sed -i "s|\${MONGO_ATLAS_URI}|${{ secrets.MONGO_ATLAS_URI }}|g" app-secrets.yml
          sed -i "s|\${JWT_SECRET_KEY}|${{ secrets.JWT_SECRET_KEY }}|g" app-secrets.yml
          sed -i "s|\${JWT_EXPIRATION_TIMER}|${{ secrets.JWT_EXPIRATION_TIMER }}|g" app-secrets.yml
      
      # Optional: Take down existing deployments
      - name: Take down existing deployments
        working-directory: ./kuber
        run: |
          kubectl delete deployment --all 
          kubectl delete service --all 
          kubectl delete ingress --all
      
      
      - name: Apply Kubernetes configurations
        working-directory: ./kuber
        run: |
          kubectl apply -f backend-deployment.yml
          kubectl apply -f frontend-deployment.yml
          kubectl apply -f python-deployment.yml
          kubectl apply -f secrets.yml
          kubectl apply -f ingress.yml
      
      # Verify deployment
      # - name: Verify deployment
      #   run: |
      #     kubectl get deployments
      #     kubectl get services
      #     kubectl get ingress