FROM --platform=linux/amd64 node:22 AS build

WORKDIR /app

COPY angular.json .
COPY package.json .
COPY tsconfig.json .
COPY tsconfig.app.json .


COPY src src

RUN npm install
RUN npm run build --prod

FROM --platform=linux/amd64 nginx:alpine

COPY --from=build /app/dist/final_frontend /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]


# # Stage 1: Build Angular app
# FROM --platform=linux/amd64 node:22 AS build

# WORKDIR /app

# # Copy package files first for better layer caching
# COPY package*.json ./
# COPY angular.json .
# COPY tsconfig*.json ./

# # Install dependencies
# RUN npm install

# # Copy source files
# COPY src src

# # Build Angular app
# RUN npm run build --prod

# # Stage 2: Serve with optimized NGINX
# FROM --platform=linux/amd64 nginx:alpine

# # Remove default NGINX config
# RUN rm -rf /etc/nginx/conf.d/default.conf

# # Copy built Angular app
# COPY --from=build /app/dist/final_frontend /usr/share/nginx/html

# # Copy custom NGINX config
# COPY nginx.conf /etc/nginx/conf.d/

# # Set proper permissions
# RUN chmod -R 755 /usr/share/nginx/html

# # Health check
# HEALTHCHECK --interval=30s --timeout=3s \
#   CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# EXPOSE 80